post:
  summary: "Оптимизация портфеля с получением истории"
  description: "Выполняет оптимизацию портфеля с заданными параметрами и возвращает историю стоимости портфеля, а также метрики просадки."
  consumes:
    - application/json
  produces:
    - application/json
  parameters:
    - name: body
      in: body
      required: true
      schema:
        type: object
        required:
          - tickers
        properties:
          tickers:
            type: array
            description: "Список тикеров (или активов), включаемых в портфель"
            items:
              type: string
            example: ["SBER", "GAZP", "LKOH"]
          mode:
            type: string
            description: "Режим работы: 'tickers' — для акций, 'assets' — для индексов и валют"
            enum: [tickers, assets]
            default: "tickers"
            example: "tickers"
          rf:
            type: number
            description: "Безрисковая ставка"
            example: 0.07
          start_date:
            type: string
            format: date
            description: "Дата начала анализа (в формате YYYY-MM-DD)"
            default: "1995-01-01"
            example: "2020-01-01"
          end_date:
            type: string
            format: date
            description: "Дата окончания анализа (в формате YYYY-MM-DD)"
            example: "2024-01-01"
          objective:
            type: string
            description: "Целевая функция оптимизации"
            enum: [max_sharpe, min_volatility, efficient_risk, efficient_return, max_quadratic_utility, custom]
            default: "max_sharpe"
            example: "max_sharpe"
          risk_aversion:
            type: number
            description: "Коэффициент риск-аверсии для оптимизации (только для max_quadratic_utility)"
            example: 1.0
          target_volatility:
            type: number
            description: "Целевая волатильность (только для efficient_risk)"
            example: 0.15
          target_return:
            type: number
            description: "Целевая доходность (только для efficient_return)"
            example: 0.10
          short_positions:
            type: boolean
            description: "Разрешить короткие позиции"
            default: false
            example: false
          l2_reg:
            type: boolean
            description: "Использовать L2-регуляризацию"
            default: false
            example: true
          gamma:
            type: number
            description: "Гиперпараметр L2-регуляризации"
            default: 1.0
            example: 0.5
          frequency:
            type: integer
            description: "Частота данных (252 — дневные, 12 — месячные)"
            enum: [252, 12]
            default: 252
            example: 252

responses:
  200:
    description: "Успешная оптимизация и расчет истории"
    schema:
      type: object
      properties:
        weights_dict:
          type: object
          description: "Результирующие веса активов"
          example:
            SBER: 0.4
            GAZP: 0.3
            LKOH: 0.3
        history:
          type: array
          items:
            type: object
            properties:
              tradedate:
                type: string
                format: date-time
                example: "2022-01-15T00:00:00.000Z"
              portfolio_value:
                type: number
                example: 1056423.45
        history_message:
          type: string
          description: "Комментарий к периоду, за который доступна история"
          example: "История портфеля отображается с 2020-01-15 по 2023-12-29, так как некоторые бумаги имеют ограниченные данные."
        metrics:
          type: object
          properties:
            max_drawdown:
              type: number
              format: float
              description: "Максимальная просадка (от 0 до 1)"
              example: 0.3245
            max_drawdown_date:
              type: string
              format: date-time
              description: "Дата максимальной просадки"
              example: "2022-03-15T00:00:00.000Z"
            recovery_date:
              type: string
              format: date-time
              description: "Дата восстановления (если была)"
              example: "2022-09-20T00:00:00.000Z"
            recovery_days:
              type: string
              description: "Количество дней до восстановления (или 'Not Available')"
              example: "189"

  400:
    description: "Ошибка в запросе, например, некорректный режим"
    schema:
      type: object
      properties:
        error:
          type: string
          example: "Invalid mode"

  500:
    description: "Внутренняя ошибка сервера"
    schema:
      type: object
      properties:
        error:
          type: string
          example: "Ошибка на сервере: деление на 0"
